@page
@model RenderOPML.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}
@Html.AntiForgeryToken()

<!DOCTYPE html>
<html>
<head>
    <title>RSS Feed</title>
    <style>
        .button-form {
            display: inline;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>OPML Feeds</h1>
        <ul class="list-group mt-4">
            @foreach (var item in Model.FeedItems)
            {
                <li class="list-group-item mb-3 mt-3">
                    <h2>@item.Text</h2>
                    <a href="RenderXML?xmlUrl=@System.Web.HttpUtility.UrlEncode(item.XmlUrl)" class="btn btn-primary">Read More!</a>
                    @{
                        bool isFavorite = Model.IsFeedStarred(item.XmlUrl);
                        if (isFavorite)
                        {
                                <button type="button" class="btn btn-warning" onclick="deleteStar('@item.XmlUrl')">Unstar</button>
                        }
                        else
                        {
                                <button type="button" class="btn btn-warning" onclick="starFeed('@item.XmlUrl', '@item.HtmlUrl', '@item.Text')">Star</button>
                        }
                    }
                </li>
            }
        </ul>

        <nav>
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link" href="?currentPage=@i">@i</a>
                    </li>
                }
            </ul>
        </nav>

        <div class="mt-4">
            <a href="Favorites" class="btn btn-primary">View Favorites</a>
        </div>
    </div>

    <script>
        function starFeed(xmlUrl, htmlUrl, feedTitle) {
            const data = {
                xmlUrl: xmlUrl,
                htmlUrl: htmlUrl,
                text: feedTitle
            };

            fetch('/post-star', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (response.ok) {
                        updateStarButton(xmlUrl, true);
                    } else {
                        console.error('Request failed:', response.status);
                    }
                })
                .catch(error => {
                    console.error('Request failed:', error);
                });
        }

        function deleteStar(xmlUrl) {
            const data = {
                xmlUrl: xmlUrl
            };

            fetch('/delete-star', {
                method: 'Delete',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input:hidden[name = "__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (response.ok) {
                        updateStarButton(xmlUrl, false);
                    } else {
                        console.error('Request failed:', response.status);
                    }
                })
                .catch(error => {
                    console.error('Request failed:', error);
                });
        }

        function updateStarButton(xmlUrl, isStarred) {
            const button = document.querySelector(`button[data-xmlUrl="${xmlUrl}"]`);

            if (button) {
                if (isStarred) {
                    button.textContent = 'Unstar';
                    button.classList.add('btn-warning');
                    button.classList.remove('btn-primary');
                } else {
                    button.textContent = 'Star';
                    button.classList.add('btn-primary');
                    button.classList.remove('btn-warning');
                }
            }
        }

    </script>

</body>
</html>
